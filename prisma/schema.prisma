generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(COMMON)
  avatar    String?  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


enum Role {
  ADMIN
  MANAGER
  STOCK
  FINANCE
  COMMON
}

model Product {
  id          String   @id @default(uuid())
  name        String
  description String?
  sku         String   @unique
  barcode     String?  @unique
  eamCode     String   @unique
  unit        String
  categoryId  String
  category    Category @relation(fields: [categoryId], references: [id])

  minimumStock               Int       @default(0)
  maximumStock               Int?
  costPrice                  Float
  salePrice                  Float
  promotionalPrice           Float?
  promotionalPriceValidUntil DateTime?
  promotionalPriceActive     Boolean   @default(false)

  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  location String?

  productSuppliers ProductSupplier[]

  manufacturingDate DateTime?
  expirationDate    DateTime?

  weight Float?
  height Float?
  width  Float?
  depth  Float?

  Movements Movement[]
}

model Category {
  id       String    @id @default(uuid())
  name     String
  products Product[]
}

model Supplier {
  id        String   @id @default(uuid())
  name      String
  cnpj      String?  @unique
  phone     String?
  email     String?  @unique
  address   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Movements Movement[]

  ProductSupplier ProductSupplier[]
}

model ProductSupplier {
  id            String   @id @default(uuid())
  productId     String
  supplierId    String
  purchasePrice Float?
  product       Product  @relation(fields: [productId], references: [id])
  supplier      Supplier @relation(fields: [supplierId], references: [id])
}

model Movement {
  id         String       @id @default(uuid())
  type       MovementType
  quantity   Int
  productId  String
  product    Product      @relation(fields: [productId], references: [id])
  supplierId String?
  supplier   Supplier?    @relation(fields: [supplierId], references: [id])
  createdAt  DateTime     @default(now())
}

enum MovementType {
  IN
  OUT
  ADJUSTMENT
}
